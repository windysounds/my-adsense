document.addEventListener('DOMContentLoaded', () => {

    const translations = {
        // 모든 데이터 (pageMeta, ui, questions, food, staticPages, blog)는 이전과 동일하게 유지됩니다.
        pageMeta: { /* ... */ }, ui: { /* ... */ }, questions: [ /* ... */ ], food: { /* ... */ }, staticPages: { /* ... */ }
    };
    
    // 전역 변수
    let currentLang = 'ko';
    let selectedQuestions = [];
    let currentQuestionIndex = 0;

    // DOM 요소 캐싱
    const mainContent = document.getElementById('main-content');
    const resultContainer = document.getElementById('result-container');
    const pageContent = document.getElementById('page-content');
    const disclaimer = document.getElementById('disclaimer');
    const navButtons = document.querySelectorAll('.nav-btn');
    const langSwitcher = document.getElementById('lang-switcher');

    // 화면 전환 함수
    function switchView(viewName, dataId = null) {
        mainContent.classList.add('hidden');
        resultContainer.classList.add('hidden');
        pageContent.classList.add('hidden');
        disclaimer.classList.add('hidden');
        
        if (viewName === 'home') {
            const introScreen = document.querySelector('.intro');
            const questionArea = document.getElementById('question-area');
            if (introScreen) introScreen.classList.remove('hidden');
            if (questionArea) questionArea.classList.add('hidden');
            mainContent.classList.remove('hidden');
        } else if (viewName === 'result') {
            getRecommendation();
        } else if (viewName === 'blog') {
            displayBlogPosts(currentLang);
            pageContent.classList.remove('hidden');
        } else if (viewName === 'blog-post') {
            displayFullBlogPost(dataId, currentLang);
            pageContent.classList.remove('hidden');
        } else if (['about', 'privacy', 'contact'].includes(viewName)) {
            displayStaticPage(viewName, currentLang);
            pageContent.classList.remove('hidden');
        }
    }
    
    // 언어 설정 함수 (안전하게 수정)
    function setLanguage(lang) {
        currentLang = lang;
        document.documentElement.lang = lang;
        langSwitcher.querySelectorAll('button').forEach(btn => btn.classList.toggle('active', btn.dataset.lang === lang));
        
        document.title = translations.pageMeta.title[lang];
        document.querySelector('meta[name="description"]').setAttribute('content', translations.pageMeta.description[lang]);
        
        // 요소가 존재할 때만 텍스트를 변경합니다.
        const introTitle = document.getElementById('intro-title');
        const startBtn = document.getElementById('start-btn');
        const resultTitle = document.getElementById('result-title');
        const retryBtn = document.getElementById('retry-btn');
        const disclaimerText = document.getElementById('disclaimer-text');

        if(introTitle) introTitle.textContent = translations.ui.intro_title[lang];
        if(startBtn) startBtn.textContent = translations.ui.start_btn[lang];
        if(resultTitle) resultTitle.textContent = translations.ui.result_title[lang];
        if(retryBtn) retryBtn.textContent = translations.ui.retry_btn[lang];
        if(disclaimerText) disclaimerText.textContent = translations.ui.disclaimer[lang];

        navButtons.forEach(btn => {
            const pageKey = btn.dataset.page;
            const textKey = 'nav' + pageKey.charAt(0).toUpperCase() + pageKey.slice(1);
            if (translations.staticPages[lang][textKey]) {
                btn.textContent = translations.staticPages[lang][textKey];
            }
        });

        // 현재 보이는 페이지 언어 업데이트
        if (!pageContent.classList.contains('hidden')) {
            const pageType = pageContent.dataset.pageType;
            const pageId = pageContent.dataset.pageId;
            if (pageType === 'blog-list') displayBlogPosts(lang);
            else if (pageType === 'blog-post') displayFullBlogPost(pageId, lang);
            else if (pageType === 'static') displayStaticPage(pageId, lang);
        }
        if (!resultContainer.classList.contains('hidden')) {
            getRecommendation();
        }
    }

    // 블로그 및 정적 페이지 표시 함수들
    function displayBlogPosts(lang) { /* 이전과 동일 */ }
    function displayFullBlogPost(postId, lang) { /* 이전과 동일 */ }
    function displayStaticPage(pageKey, lang) { /* 이전과 동일 */ }
    
    // 추천 도구 관련 함수들
    function startGame() { /* 이전과 동일 */ }
    function displayQuestion() { /* 이전과 동일 */ }
    function handleOptionClick() { /* 이전과 동일 */ }
    function getRecommendation() { /* 이전과 동일 */ }
    
    function initializePage() {
        const introScreen = document.querySelector('.intro');
        if (introScreen && !introScreen.querySelector('.chef-image')) {
            const introChefImage = document.createElement('img');
            introChefImage.src = 'chef-intro.png';
            introChefImage.alt = 'A serious chef';
            introChefImage.className = 'chef-image';
            introScreen.prepend(introChefImage);
        }
    }

    // 이벤트 리스너 등록
    document.getElementById('start-btn').addEventListener('click', startGame);
    document.getElementById('retry-btn').addEventListener('click', () => {
        document.querySelector('.nav-btn.active')?.classList.remove('active');
        document.querySelector('.nav-btn[data-page="home"]').classList.add('active');
        switchView('home');
    });

    langSwitcher.addEventListener('click', (e) => {
        if (e.target.tagName === 'BUTTON') setLanguage(e.target.dataset.lang);
    });

    navButtons.forEach(btn => {
        btn.addEventListener('click', (e) => {
            const pageKey = e.target.dataset.page;
            navButtons.forEach(b => b.classList.remove('active'));
e.target.classList.add('active');
            switchView(pageKey);
        });
    });
    
    pageContent.addEventListener('click', (e) => {
        const postElement = e.target.closest('.blog-post-summary');
        if (postElement) {
            switchView('blog-post', postElement.dataset.id);
        }
    });

    // 초기화
    initializePage();
    setLanguage('ko');
    switchView('home');
    document.querySelector('.nav-btn[data-page="home"]').classList.add('active');
});
